name: Create and publish a Docker image to GCP Artifact Registry, Deploy to Cloudtype

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: clever-coast-409912
  REGISTRY: ${{ secrets.GAR_REGISTRY }}
  IMAGE_NAME: trab-image
  GCE_INSTANCE: trab-instance
  GCE_INSTANCE_ZONE: asia-northeast3-a

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Generate Environment File
        run: |
          echo "FIREBASE_KEY=$FIREBASE_KEY" >> .env
          echo "CLOUD_STORAGE_KEY=$CLOUD_STORAGE_KEY" >> .env
          echo "DB_TYPE=$DB_TYPE" >> .env
          echo "DB_HOST=$DB_HOST" >> .env
          echo "DB_PORT=$DB_PORT" >> .env
          echo "DB_USERNAME=$DB_USERNAME" >> .env
          echo "DB_PASSWORD=$DB_PASSWORD" >> .env
          echo "DB_DATABASE=$DB_DATABASE" >> .env
        env:
          FIREBASE_KEY: ${{ secrets.FIREBASE_KEY }}
          CLOUD_STORAGE_KEY: ${{ secrets.CLOUD_STORAGE_KEY }}
          DB_TYPE: ${{ secrets.DB_TYPE }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_DATABASE: ${{ secrets.DB_DATABASE }}

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: _json_key
          password: ${{ secrets.GAR_JSON_KEY }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw, value = http-server

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      # CD 시작 부분 (GCE 배포 설정)
      - name: Setup gcloud auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GAR_JSON_KEY }}

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2

      # # 이미지 삭제
      # - name: Delete old Docker images on GCP Artifact Registry
      #   run: |
      #     OLD_TAG="${{ steps.meta.outputs.tags }}"
      #     if [ -n "$OLD_TAG" ]; then
      #       gcloud container images delete "$OLD_TAG" --quiet --force-delete-tags
      #     fi

      # Deploy to Google Compute Engine instance
      - name: Deploy
        run: |
          TAG="${{ steps.meta.outputs.tags }}"
          gcloud compute instances update-container "$GCE_INSTANCE" \
          --zone "$GCE_INSTANCE_ZONE" \
          --container-image "$TAG"
